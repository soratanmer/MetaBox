# sing-box 配置文件注释版

# log: 配置日志输出
log:
  # level: 日志级别，可选 trace, debug, info, warn, error, fatal, panic。info 为信息级别，适合日常使用。
  level: info
  # timestamp: 是否在日志中包含时间戳，true 表示启用。
  timestamp: true

# experimental: 包含一些实验性功能配置
experimental:
  # clash_api: 配置 Clash API 兼容层，允许兼容 Clash 客户端或 Dashboard。
  clash_api:
    # external_controller: Clash API 监听地址和端口。用于外部工具连接控制 sing-box。
    external_controller: 127.0.0.1:20123
    # secret: Clash API 访问密钥，用于验证连接。请替换为一个安全的随机字符串。
    secret: accpetWYN
    # default_mode: 默认的路由模式，可选 rule (规则模式), global (全局代理), direct (全局直连)。
    default_mode: rule
  # cache_file: 配置缓存文件，用于存储 FakeIP 数据和远程规则集等，可以加快启动速度。
  cache_file:
    # enabled: 是否启用缓存文件，true 表示启用。
    enabled: true

# dns: 配置 DNS 设置
dns:
  # servers: DNS 服务器列表，按顺序尝试使用。
  servers:
    # 第一个 DNS 服务器配置 (远程 DNS)
    - tag: remote-dns # DNS 服务器标签，用于在路由规则中引用。这是一个用户自定义的名称。
      type: https # DNS 服务器类型，https 表示 DNS over HTTPS。
      server: dns.google # DNS 服务器地址，这里是 Google Public DNS。
      # domain_resolver: 用于解析此 DNS 服务器（dns.google）域名的出站连接标签。避免循环依赖。
      domain_resolver: remote-resolver-dns
      # detour: 回绕（detour）设置，指定访问此 DNS 服务器时实际使用的出站连接。这里是使用“节点选择”这个出站组。
      detour: 节点选择
    # 第二个 DNS 服务器配置 (本地 DNS)
    - tag: local-dns # DNS 服务器标签。
      type: https # DNS 服务器类型。
      server: dns.alidns.com # DNS 服务器地址，这里是阿里云公共 DNS。
      # domain_resolver: 用于解析此 DNS 服务器（dns.alidns.com）域名的出站连接标签。
      domain_resolver: resolver-dns
      # detour: 回绕设置，这里使用“全球直连”出站组。
      detour: 全球直连
    # 第三个 DNS 服务器配置 (远程解析器 DNS - UDP)
    - tag: resolver-dns # DNS 服务器标签。
      type: udp # DNS 服务器类型，udp 表示传统的 UDP DNS。
      server: 223.5.5.5 # DNS 服务器地址。
      detour: 全球直连 # 回绕设置。
    # 第四个 DNS 服务器配置 (远程解析器 DNS - UDP)
    - tag: remote-resolver-dns # DNS 服务器标签。
      type: udp # DNS 服务器类型。
      server: 8.8.8.8 # DNS 服务器地址，Google Public DNS 的 UDP 地址。
      detour: 节点选择 # 回绕设置。
    # FakeIP DNS 配置
    - tag: fakeip # DNS 服务器标签。
      type: fakeip # DNS 服务器类型，fakeip 用于为符合条件的域名分配一个虚假 IP 地址，通常用于 TUN 模式下。
      # inet4_range: IPv4 FakeIP 地址范围。
      inet4_range: 11.0.0.1/16
      # inet6_range: IPv6 FakeIP 地址范围。
      inet6_range: fc00::/18
  # rules: DNS 规则列表，用于根据条件选择 DNS 服务器或执行特定动作。按顺序匹配，第一个匹配到的规则生效。
  rules:
    # 第一个 DNS 规则：Clash direct 模式下的 DNS 请求
    - clash_mode: direct # 匹配 Clash API 中的 direct 模式。
      action: route # 规则动作，route 表示将 DNS 请求路由到指定的服务器。
      server: local-dns # 指定使用的 DNS 服务器标签。
    # 第二个 DNS 规则：Clash global 模式下的 DNS 请求
    - clash_mode: global # 匹配 Clash API 中的 global 模式。
      action: route # 规则动作。
      server: remote-dns # 指定使用的 DNS 服务器标签。
    # 第三个 DNS 规则：匹配 geosite_cn 规则集的域名
    - rule_set: geosite_cn # 匹配 geosite_cn 规则集中的域名 (通常是中国大陆域名)。
      action: route # 规则动作。
      server: local-dns # 指定使用的 DNS 服务器标签。
    # 第四个 DNS 规则：匹配 geosite_geolocation-!cn 规则集的域名
    - rule_set: geosite_geolocation-!cn # 匹配 geosite_geolocation-!cn 规则集中的域名 (通常是非中国大陆地理位置的域名)。
      action: route # 规则动作。
      server: remote-dns # 指定使用的 DNS 服务器标签。
  # independent_cache: 是否为每个 DNS 服务器维护独立的缓存。false 表示所有服务器共享缓存。
  independent_cache: false
  # final: 最终使用的 DNS 服务器标签，如果在前面的规则中没有匹配到，则使用此服务器。
  final: remote-dns

# inbounds: 配置入站连接，即 sing-box 监听的端口和协议。
inbounds:
  # 第一个入站连接 (Mixed 代理)
  - type: mixed # 入站协议类型，mixed 支持 Shadowsocks, SOCKS, HTTP 代理。
    listen: 127.0.0.1 # 监听地址。127.0.0.1 表示只监听本地环回地址。
    listen_port: 51283 # 监听端口。
  # 第二个入站连接 (TUN 虚拟网卡)
  - type: tun # 入站协议类型，tun 表示 TUN 虚拟网卡。用于劫持系统流量。
    # address: TUN 接口的 IPv4 和 IPv6 地址及子网。这些是分配给虚拟网卡的地址。
    address:
      - 172.19.0.0/30
      - fdfe:dcba:9876::0/126
    # stack: TUN 接口使用的网络栈，可选 system, gvisor, mixed。system 使用系统网络栈，通常兼容性最好。
    stack: system
    # auto_route: 是否自动配置路由表以使用 TUN 接口。true 表示启用。
    auto_route: true
    # strict_route: 是否严格执行路由规则，防止流量绕过 TUN 接口。true 表示启用。
    strict_route: true
    # platform: 平台相关的 TUN 配置 (例如 Android, macOS, Windows)。
    platform:
      # http_proxy: 配置平台 HTTP 代理，通常用于系统层面的 HTTP 代理设置。
      http_proxy:
        enabled: true # 是否启用 HTTP 代理。
        server: 127.0.0.1 # HTTP 代理服务器地址。
        server_port: 51283 # HTTP 代理服务器端口，这里指向上面的 mixed 入站。

# outbounds: 配置出站连接，即 sing-box 如何将流量发送出去。
outbounds:
  # 第一个出站连接 (节点选择)
  - tag: 节点选择 # 出站连接标签，用于在路由规则或 selector 中引用。
    type: selector # 出站协议类型，selector 用于根据策略选择实际的出站连接。
    # outbounds: 可供此 selector 选择的子出站连接标签列表。
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 手动切换
      - direct # direct 是 sing-box 内置的直连出站。
    # default: selector 默认选择的子出站连接标签。
    default: 日本节点
  # 第二个出站连接 (手动切换)
  - tag: 手动切换 # 出站连接标签。
    type: selector # 出站协议类型。
    outbounds: [] # 可供选择的子出站连接标签列表，此处为空，表示此 selector 需要通过外部 API (如 Clash API) 手动切换节点。
  # 后续的多个 selector 出站连接 (用于特定应用的流量分流，方便在 Clash Dashboard 中管理和切换)
  - tag: Sina # 新浪相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: direct
  - tag: Spotify # Spotify 相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: direct
  - tag: YouTube # YouTube 相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 日本节点
  - tag: 哔哩哔哩 # 哔哩哔哩相关的流量 (可能包含国际版和国内版)。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: direct
  - tag: Telegram # Telegram 相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 香港节点
  - tag: OpenAi # OpenAI 相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 美国节点
  - tag: FCM # Firebase Cloud Messaging (FCM) 相关的流量，通常用于 Android 应用推送。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: direct
  - tag: Google # Google 相关的流量 (广义)。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 日本节点
  - tag: Microsoft # Microsoft 相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 日本节点
  - tag: Apple # Apple 相关的流量。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 日本节点
  - tag: 全球直连 # 用于强制直连的流量组。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: direct
  - tag: 漏网之鱼 # 没有匹配到任何路由规则的流量的默认处理组。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 美国节点
      - 节点选择
      - 手动切换
      - direct
    default: 日本节点
  # 后续的多个 urltest 出站连接 (用于测试节点可用性并选择最优节点)
  # 注意：这些 urltest 出站本身不包含实际的节点配置，实际节点通常需要在其他地方定义并被这些 urltest 引用。
  - tag: 日本节点 # 日本节点的测试组。
    type: urltest # 出站协议类型，urltest 用于测试多个出站连接的延迟和可用性，并选择最优的。
    outbounds: [] # 实际的节点配置需要放在这里面，此处为空列表，表示实际节点配置在其他地方引入或生成。
    url: https://www.gstatic.com/generate_204 # 测试 URL，用于测量延迟。
    interval: 300s # 测试间隔，每 300 秒测试一次。
    tolerance: 150 # 延迟容忍度，用于判断节点是否可用。
  - tag: 香港节点 # 香港节点的测试组。
    type: urltest
    outbounds: []
    url: https://www.gstatic.com/generate_204
    interval: 300s
    tolerance: 150
  - tag: 台湾节点 # 台湾节点的测试组。
    type: urltest
    outbounds: []
    url: https://www.gstatic.com/generate_204
    interval: 300s
    tolerance: 150
  - tag: 美国节点 # 美国节点的测试组。
    type: urltest
    outbounds: []
    url: https://www.gstatic.com/generate_204
    interval: 300s
    tolerance: 150
  - tag: 新加坡节点 # 新加坡节点的测试组。
    type: urltest
    outbounds: []
    url: https://www.gstatic.com/generate_204
    interval: 300s
    tolerance: 150
  # 一个用于全局模式的 selector
  - tag: GLOBAL # 用于全局模式的出站组。
    type: selector
    outbounds:
      - 日本节点
      - 香港节点
      - 台湾节点
      - 美国节点
      - 新加坡节点
      - 节点选择
      - 手动切换
      - direct
      - block # block 是 sing-box 内置的阻止连接出站。
    default: 日本节点
  # 内置的 direct 出站连接 (直连)
  - type: direct # 出站协议类型，direct 表示直接连接，不使用代理。
    tag: direct # 出站连接标签。

# route: 配置路由规则，决定流量如何被转发到不同的出站连接。
route:
  # default_domain_resolver: 默认的域名解析器，指定在没有特定规则匹配时，使用哪个 DNS 服务器进行域名解析。
  default_domain_resolver:
    server: remote-dns
  # rule_set: 规则集列表，用于组织和引用一组规则 (例如 GeoIP 或 Geosite)。这些规则集通常从远程下载。
  rule_set:
    # 远程规则集配置示例
    - tag: geosite_spotify # 规则集标签。
      type: remote # 规则集类型，remote 表示从远程 URL 下载。
      format: binary # 规则集格式，binary 表示 sing-box 支持的二进制格式 (srs)。
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/spotify.srs # 规则集下载地址。
      download_detour: 全球直连 # 下载规则集时使用的出站连接，避免下载规则集本身被代理。
    - tag: geosite_telegram
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/telegram.srs
      download_detour: 全球直连
    - tag: geoip_telegram # GEOIP 规则集，匹配 IP 地址。
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geoip/telegram.srs
      download_detour: 全球直连
    - tag: geosite_openai
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/openai.srs
      download_detour: 全球直连
    - tag: geosite_biliintl
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/biliintl.srs
      download_detour: 全球直连
    - tag: geosite_bilibili
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/bilibili.srs
      download_detour: 全球直连
    - tag: geosite_youtube
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/youtube.srs
      download_detour: 全球直连
    - tag: geosite_sina
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/sina.srs
      download_detour: 全球直连
    - tag: geoip_google
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geoip/google.srs
      download_detour: 全球直连
    - tag: geosite_google
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/google.srs
      download_detour: 全球直连
    - tag: geosite_microsoft
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/microsoft.srs
      download_detour: 全球直连
    - tag: geosite_apple
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/apple.srs
      download_detour: 全球直连
    - tag: geosite_googlefcm # Google FCM 规则集。
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/googlefcm.srs
      download_detour: 全球直连
    - tag: geosite_category-ads-all # 广告类规则集。
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/category-ads-all.srs
      download_detour: 全球直连
    - tag: geoip_cn # 中国大陆 IP 规则集。
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geoip/cn.srs
      download_detour: 全球直连
    - tag: geosite_cn # 中国大陆域名规则集。
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/cn.srs
      download_detour: 全球直连
    - tag: geosite_geolocation-!cn # 非中国大陆地理位置规则集。
      type: remote
      format: binary
      url: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/geolocation-!cn.srs
      download_detour: 全球直连
  # rules: 路由规则列表，按顺序匹配，第一个匹配到的规则生效。
  rules:
    # 第一个路由规则：Clash direct 模式
    - clash_mode: direct # 匹配 Clash API 中的 direct 模式。
      outbound: direct # 指定使用的出站连接标签。
    # 第二个路由规则：Clash global 模式
    - clash_mode: global # 匹配 Clash API 中的 global 模式。
      outbound: GLOBAL # 指定使用的出站连接标签。
    # 后续规则根据规则集匹配流量并分流到不同的出站
    - rule_set: geosite_spotify # 匹配 spotify 规则集的流量。
      outbound: Spotify # 路由到 Spotify 出站组。
    - rule_set: # 匹配 geosite_telegram 或 geoip_telegram 规则集的流量。
        - geosite_telegram
        - geoip_telegram
      outbound: Telegram # 路由到 Telegram 出站组。
    - rule_set: geosite_openai # 匹配 geosite_openai 规则集的流量。
      outbound: OpenAi # 路由到 OpenAi 出站组。
    - rule_set: # 匹配 geosite_biliintl 或 geosite_bilibili 规则集的流量。
        - geosite_biliintl
        - geosite_bilibili
      outbound: 哔哩哔哩 # 路由到 哔哩哔哩 出站组。
    - rule_set: geosite_youtube # 匹配 geosite_youtube 规则集的流量。
      outbound: YouTube # 路由到 YouTube 出站组。
    - rule_set: geosite_sina # 匹配 geosite_sina 规则集的流量。
      outbound: Sina # 路由到 Sina 出站组。
    - rule_set: # 匹配 geoip_google 或 geosite_google 规则集的流量。
        - geoip_google
        - geosite_google
      outbound: Google # 路由到 Google 出站组。
    - rule_set: geosite_microsoft # 匹配 geosite_microsoft 规则集的流量。
      outbound: Microsoft # 路由到 Microsoft 出站组。
    - rule_set: geosite_apple # 匹配 geosite_apple 规则集的流量。
      outbound: Apple # 路由到 Apple 出站组。
    - rule_set: geosite_googlefcm # 匹配 geosite_googlefcm 规则集的流量。
      outbound: FCM # 路由到 FCM 出站组。
    - rule_set: geosite_category-ads-all # 匹配广告规则集的流量。
      action: reject # 规则动作，reject 表示阻止连接。
    - rule_set: # 匹配中国大陆 IP 或域名规则集的流量。
        - geoip_cn
        - geosite_cn
      outbound: 全球直连 # 路由到 全球直连 出站组。
    - rule_set: geosite_geolocation-!cn # 匹配非中国大陆地理位置规则集的流量。
      outbound: 节点选择 # 路由到 节点选择 出站组。
    # 流量嗅探规则：在进行路由匹配之前，尝试嗅探连接的协议 (如 TLS, HTTP) 和目标域名。
    - action: sniff
    # DNS 请求劫持规则：劫持 UDP 53 端口的流量，交由 sing-box 内置的 DNS 处理。
    - protocol: dns # 匹配 DNS 协议的流量。
      action: hijack-dns # 规则动作，hijack-dns 表示劫持 DNS 请求并由 sing-box 的 DNS 模块处理。
  # final: 最终规则，如果没有匹配到前面的任何规则，则使用此规则指定的出站连接。
  final: 漏网之鱼 # 路由到 漏网之鱼 出站组。
  # auto_detect_interface: 是否自动检测出站接口，true 表示启用。
  auto_detect_interface: true